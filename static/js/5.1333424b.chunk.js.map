{"version":3,"sources":["hoc/withAuthRedirect.js","componets/Dialog/Dialog.module.css","componets/Dialog/DialogItem/DialogItem.module.css","componets/Dialog/Message/Message.module.css","componets/Dialog/DialogItem/DialogItem.jsx","componets/Dialog/Message/Message.jsx","componets/Dialog/Dialog.jsx","componets/selectors/dialogSelectors.js","componets/Dialog/DialogÐ¡ontainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogfItem","className","s","dialogItem","src","alt","id","name","Message","style","float","position","block","block__foto","img","block__message","message","AddMessageRedaxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","dialog__btn","Field","component","Dialog","dialogsElements","dialogsData","map","el","messagesElements","messages","dialog","dialog__name","dialog__message","value","addMessage","newMyMessage","dialogsDataSelector","dialogsPage","messagesSelector","newMyMessageSelector","compose","addMyMessageActionCreator"],"mappings":"2NAIIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WAEI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAJV,GACXC,IAAML,WAWtC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBCpB7EM,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAe,6BAA6B,gBAAkB,gCAAgC,YAAc,8B,oBCA9JD,EAAOC,QAAU,CAAC,WAAa,iC,oBCA/BD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,YAAc,6BAA6B,eAAiB,kC,4GCgB9FC,EAbK,SAACN,GACjB,OAAQ,sBAAKO,UAAWC,IAAEC,WAAlB,UACA,qBAAKF,UAAU,mBAAf,SACI,qBACIG,IAAI,yDACJC,IAAI,OAEZ,cAAC,IAAD,CAASV,GAAE,sBAAiBD,EAAMY,IAAlC,SAAyCZ,EAAMa,W,kBCgB5CC,EAvBC,SAACd,GACb,IAAIe,EAAM,CACNC,MAAMhB,EAAMiB,UAGhB,OAAQ,sBAAKV,UAAWC,IAAEU,MAAOH,MAAOA,EAAhC,UAEA,sBAAKR,UAAWC,IAAEW,YAAlB,UACI,qBACIT,IAAKV,EAAMoB,IACXT,IAAI,KACR,4BAAIX,EAAMa,UAEd,qBAAKN,UAAWC,IAAEa,eAAlB,SACI,4BAAIrB,EAAMsB,gB,0BC6BpBC,EAAsBC,YAAU,CAACC,KAAM,uBAAwBC,gBAdjD,SAACC,EAAQC,GAAT,OAChBA,EAASC,YAAM,2BAaSL,EAZL,SAACxB,GAEpB,OACI,uBAAM8B,SAAU9B,EAAM+B,aAAcxB,UAAWC,IAAEwB,YAAjD,UACI,cAACC,EAAA,EAAD,CAAOC,UAAW,WAAYrB,KAAM,iBACpC,4BACI,kDAODsB,EAzCD,SAACnC,GAEP,IAAIoC,EAAkBpC,EAAMqC,YAAYC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAa1B,KAAM0B,EAAG1B,KAAkBD,GAAI2B,EAAG3B,IAAd2B,EAAG3B,OAClF4B,EAAmBxC,EAAMyC,SAASH,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAASjB,QAASiB,EAAGjB,QAAqBF,IAAKmB,EAAGnB,IACpCP,KAAM0B,EAAG1B,KAAMI,SAAUsB,EAAGtB,UADPsB,EAAG3B,OAOtF,OACI,sBAAKL,UAAWC,IAAEkC,OAAlB,UACI,qBAAKnC,UAAWC,IAAEmC,aAAlB,SACKP,IAEL,sBAAK7B,UAAWC,IAAEoC,gBAAlB,UACKJ,EACD,cAACjB,EAAD,CAAqBO,SAXb,SAACe,GACjB7C,EAAM8C,WAAWD,EAAME,wB,yBCdtBC,EAAoB,SAACvD,GAC9B,OAAOA,EAAMwD,YAAYZ,aAEhBa,EAAiB,SAACzD,GAC3B,OAAOA,EAAMwD,YAAYR,UAEhBU,EAAqB,SAAC1D,GAC/B,OAAOA,EAAMwD,YAAYF,cCiBdK,sBAAQjD,aAhBD,SAACV,GACnB,MAAO,CACH4C,YAAaW,EAAoBvD,GACjCgD,SAAUS,EAAiBzD,GAC3BsD,aAAcI,EAAqB1D,OAGlB,SAACmC,GACtB,MAAO,CACHkB,WAAY,SAACC,GACTnB,EAASyB,YAA0BN,SAMsBnD,IAAtDwD,CAAwEjB","file":"static/js/5.1333424b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedicertComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedicertComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__3CuAW\",\"dialog__name\":\"Dialog_dialog__name__3BOSM\",\"dialog__message\":\"Dialog_dialog__message__1OEA_\",\"dialog__btn\":\"Dialog_dialog__btn__1usaq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__2_Fo5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Message_block__2vQqP\",\"block__foto\":\"Message_block__foto__227qW\",\"block__message\":\"Message_block__message__12yQv\"};","import React from 'react';\r\nimport s from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogfItem = (props) => {\r\n    return (<div className={s.dialogItem}>\r\n            <div className=\".dialogItem__img\">\r\n                <img\r\n                    src=\"https://avatarko.ru/img/kartinka/1/avatarko_anonim.jpg\"\r\n                    alt=\"\"/>\r\n            </div>\r\n            <NavLink to={`/dialogs/id=${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default DialogfItem;","import React from 'react';\r\nimport s from \"./Message.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n    let style={\r\n        float:props.position\r\n    }\r\n\r\n    return (<div className={s.block} style={style}>\r\n\r\n            <div className={s.block__foto}>\r\n                <img\r\n                    src={props.img}\r\n                    alt=\"\"/>\r\n                <p>{props.name}</p>\r\n            </div>\r\n            <div className={s.block__message}>\r\n                <p>{props.message}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from \"../Dialog/Dialog.module.css\";\r\nimport DialogfItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\n\r\n\r\nconst Dialog =(props)=>  {\r\n\r\n        let dialogsElements = props.dialogsData.map(el => <DialogfItem name={el.name} key={el.id} id={el.id}/>)\r\n        let messagesElements = props.messages.map(el => <Message message={el.message} key={el.id} img={el.img}\r\n                                                                      name={el.name} position={el.position}/>)\r\n\r\n        let addNewMessage = (value) => {\r\n            props.addMessage(value.newMyMessage)\r\n\r\n        }\r\n        return (\r\n            <div className={s.dialog}>\r\n                <div className={s.dialog__name}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.dialog__message}>\r\n                    {messagesElements}\r\n                    <AddMessageRedaxForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('dialogAddMessageForm'));\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.dialog__btn}>\r\n            <Field component={'textarea'} name={'newMyMessage'}/>\r\n            <p>\r\n                <button>send</button>\r\n            </p>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageRedaxForm = reduxForm({form: 'dialogAddMessageForm', onSubmitSuccess: afterSubmit})(AddMessageForm)\r\nexport default Dialog;","export const dialogsDataSelector=(state)=>{\r\n    return state.dialogsPage.dialogsData\r\n}\r\nexport const messagesSelector=(state)=>{\r\n    return state.dialogsPage.messages\r\n}\r\nexport const newMyMessageSelector=(state)=>{\r\n    return state.dialogsPage.newMyMessage\r\n}\r\n","import React from 'react';\r\nimport {addMyMessageActionCreator} from \"../../redux/reducerDialog\";\r\nimport Dialog from \"./Dialog\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {dialogsDataSelector, messagesSelector, newMyMessageSelector} from \"../selectors/dialogSelectors\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: dialogsDataSelector(state),\r\n        messages: messagesSelector(state),\r\n        newMyMessage: newMyMessageSelector(state),\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMyMessage) => {\r\n            dispatch(addMyMessageActionCreator(newMyMessage))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialog)"],"sourceRoot":""}